pipeline {
    environment{
        scannerHome = tool 'sonarscanner';
    }
    agent any



    stages {
        /*
        stage('Test') {

            steps {

                echo 'Unit testing'

                sh '''

                python3 --version

                cd ./cidr_convert_api/python/
		pwd

                '''                

            }

        }*/


        
        stage('SonarCloud Static Analysis') {
            steps {
               sh ' cd cidr_convert_api/python/ '
               withSonarQubeEnv('SonarCloud') {
                sh '''                    
                         ${scannerHome}/bin/sonar-scanner \
                        -Dsonar.organization=violetadfs \
                        -Dsonar.projectKey=violetadfs_proyectofinalvioleta \
                        -Dsonar.sources=./cidr_convert_api/python/ \
                        -Dsonar.host.url=https://sonarcloud.io

                    '''

             }
            }           
        }

        stage('build'){
            steps{
                sh 'docker --version'
                sh '''
                cd cidr_convert_api/python/
                docker build . -t dott
                docker tag dott violetadfs/dott
                docker push violetadfs/dott                    
                '''                
            }
        }
        
        stage('deploy'){
            steps{
                script{
                    try{
                        sh '''
                        docker rm -vf $(docker ps -aq)
                        '''
                    }catch(error){
                        echo error.getMessage()
                    }
                    sh '''
                        docker run -d --name pythonproject -p 8000:8000 violetadfs/dott
                        docker ps -a
                        '''
                        
                }
            }
        }

    }

}
